/*
    mGrid - A simple SASS grid solution.

    Compatibility:
    - IE: 9
    - Chrome: 4.0
    - Firefox: 3.5
    - Safari: 3.2

    This is the lowest known versions of browsers that full functionality of mGrid-core will work with. mGrid-core is not fully tested on all browsers and you are using it at your own risk.
    I do my best to constantly test new mGrid features across all browsers, but in the case that a bug has been missed, please be sure to raise it so it can be fixed.
*/
/* #region Variable Init */
$padding-global: 20px;
$lst-padding-margin-sizes: "padding" 5, "padding" 10, "padding" 15, "padding" 20, "margin" 5, "margin" 10, "margin" 15, "margin" 20;
$padding-xsm: nth(nth($lst-padding-margin-sizes, 1), 2) + px;
$padding-sm: nth(nth($lst-padding-margin-sizes, 2), 2) + px;
$padding-med: nth(nth($lst-padding-margin-sizes, 3), 2) + px;
$padding-lg: nth(nth($lst-padding-margin-sizes, 4), 2) + px;
$container: '.container';
/* #endregion */

/* #region Mixins */
@mixin CreatePaddingMarginClass($class, $size) {
    .#{$class + '-' + $size} {
        #{$class}: $size + px;
    }

    .#{$class + '-top-' + $size} {
        #{$class + '-top'}: $size + px;
    }

    .#{$class + '-right-' + $size} {
        #{$class + '-right'}: $size + px;
    }

    .#{$class + '-bottom-' + $size} {
        #{$class + '-bottom'}: $size + px;
    }

    .#{$class + '-left-' + $size} {
        #{$class + '-left'}: $size + px;
    }
}

@mixin Transform($transform) {
    -moz-transform: $transform;
    -ms-transform: $transform;
    -o-transform: $transform;
    -webkit-transform: $transform;
    transform: $transform;
}

@mixin VerticalAlignMiddle($isAbsolute) {
    @if $isAbsolute {
        position: absolute;
    }
    @else {
        position: relative;
    }

    top: 50%;
    @include Transform(translateY(-50%));
}
/* #endregion */

/* #region Container and Col- setup */

#{$container} {
    width: 100%;
    padding: $padding-global;
    height: auto;

    &::after {
        content: "";
        display: table;
        clear: both;
    }
}

*, *:after, *:before {
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box;
}

[class*='col-'] {
    float: left;
    display: inline-block;
}

[class*='col-']:not(:last-of-type) {
    padding-right: 10px;
}

/* #endregion */

/* #region Display Classes */
.vertical-align-middle {
    @include VerticalAlignMiddle(false);
}

.vertical-align-middle-absolute, .vertical-align-middle-abs {
    @include VerticalAlignMiddle(true);
}
/* #endregion */

/* #region Layout and Flow Classes */
.row {
    float: none;

    &:not(:last-of-type) {
        margin-bottom: $padding-global;
    }

    &::after {
        clear:both;
    }
}
/* #endregion */

/* #region Initial Mobile / Desktop Queries */
@media (max-width: 468px) {
    [class*='col-'] {
        float: none;
        width: auto;
    }

    #{$container} [class*='col-'], .container [class*='col-']:not(:last-of-type) {
        width: 100%;
        padding-right: 0;
        padding-bottom: $padding-global;
    }

    footer #{$container} [class*='col-'] {
        padding-bottom: 0;
    }
}

@media (min-width: 468px) {
    @for $i from 1 through 12 {
 
    .col-#{$i} { 
        width: 100% / 12 * $i;
    }
 
}
}
/* #endregion */

/* #region Margin and Padding Classes */
@each $size in $lst-padding-margin-sizes {
    $class: nth($size, 1);
    @include CreatePaddingMarginClass($class, nth($size, 2));
}
/* #endregion */
